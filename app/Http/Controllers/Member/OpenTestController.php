<?php
/**
 * 发行需求榜控制器
 */
namespace App\Http\Controllers\Member;

use Illuminate\Http\Request;
use App\Models\OpenTest;
use App\Models\Product;
use Auth;
use Toastr;

class OpenTestController extends BaseController
{
    /**
     * @name index
     * @desc 发行需求榜列表
     * @return \Illuminate\Contracts\View\Factory|\Illuminate\View\View
     * @since  2017/05/08
     * @update 2017/05/08
     */
    public function index()
    {
        $company_info = Auth::user()->companyInfo;
        if($company_info) {
            $data = OpenTest::where(['company_id' => Auth::user()->companyInfo->id])->orderBy('updated_at', 'desc')->paginate(10);
            return view('member.openTest.index', [
                'data' => $data,
                'product_config' => $this->product_config,
                'company_info' => $company_info,
                'is_register_company_info' => true,
            ]);
        } else {
            return view('member.openTest.index', [
                'is_register_company_info' => false,
            ]);
        }
    }

    /**
     * @name create
     * @desc 发布需求
     * @return \Illuminate\Contracts\View\Factory|\Illuminate\View\View
     * @since  2017/05/08
     * @update 2017/05/08
     */
    public function create()
    {
        $products = Product::where(['company_id' => Auth::user()->companyInfo->id, 'status' => 1])->get();
        if ($products->count()) {
            return view('member.openTest.create',[
                'product_config' => $this->product_config,
                'products' => $products,
            ]);
        } else {
            Toastr::info("对不起，您还没添加产品，请先添加产品");
            return redirect()->back();
        }
    }

    /**
     * @name store
     * @desc 更新需求
     * @param Request $request
     * @return \Illuminate\Http\RedirectResponse
     * @since  2017/05/08
     * @update 2017/05/08
     */
    public function store(Request $request)
    {
        $this->validate($request, [
            'open_time' => 'required',
            'product_id' => 'required',
            'schedule_id' => 'required|Numeric',
            'is_del' => 'required',
            'is_billing' => 'required',
            'platform_id' => 'required',
            'research' => 'required',
            'issue' => 'required',
        ]);
        $update_data = [
            'user_id' => Auth::user()->id,
            'company_id' => Auth::user()->companyInfo->id,
            'province_code' => Auth::user()->companyInfo->province_code,
            'open_time' => $request->input('open_time'),
            'product_id' => $request->input('product_id'),
            'schedule_id' => $request->input('schedule_id'),
            'is_del' => $request->input('is_del'),
            'is_billing' => $request->input('is_billing'),
            'platform_id' => implode(',', $request->input('platform_id')),
            'research' => $request->input('research'),
            'issue' => $request->input('issue'),
        ];
        if ($request->has('id')) {
            $OpenTest_id = $request->input('id');
            $update_data['status'] = 0;
            $res = OpenTest::where('id', $OpenTest_id)->update($update_data);
        } else {
            $res = OpenTest::create($update_data);
        }
        if ($res) {
            Toastr::success("操作成功");
        } else {
            Toastr::error("操作失败");
        }
        return redirect()->route('member.publishing.openTest.index');
    }

    /**
     * @name update
     * @desc 修改需求
     * @param $id
     * @return \Illuminate\Contracts\View\Factory|\Illuminate\View\View
     * @since  2017/05/08
     * @update 2017/05/08
     */
    public function update($id)
    {
        $data = OpenTest::where(['company_id' => Auth::user()->companyInfo->id])->where('status', '!=', -1)->find($id);
        $products = Product::where(['company_id' => Auth::user()->companyInfo->id, 'status' => 1])->get();
        return view('member.openTest.update', [
            'data' => $data,
            'product_config' => $this->product_config,
            'products' => $products,
        ]);
    }

    /**
     * @name destroy
     * @desc 删除需求
     * @param $id
     * @return \Illuminate\Http\RedirectResponse
     * @since  2017/05/08
     * @update 2017/05/08
     */
    public function destroy(Request $request)
    {
        $res = OpenTest::where(['id' => $request->input('id'), 'company_id' => Auth::user()->companyInfo->id])->update(['status' => '-1']);
        if ($res) {
            $date['code'] = 0;
            $date['message'] = "操作成功！！！";
            return $date;
        } else {
            $date['code'] = 1;
            $date['message'] = "操作失败！！！";
            return $date;
        }
    }

    public function productInfo(Request $request)
    {
        $res = Product::where(['id' => $request->input('id'), 'company_id' => Auth::user()->companyInfo->id, 'status' => 1])->first();
        if ($res) {
            $res->game_type = $this->product_config['game_type'][$res->game_type_id];
            $res->type = $this->product_config['type'][$res->type_id];
            $date['code'] = 0;
            $date['message'] = $res;
            return $date;
        } else {
            $date['code'] = 1;
            $date['message'] = "产品信息出错，请重新选择";
            return $date;
        }
    }
}
